package com.project.jdbc.service;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import com.project.jdbc.domain.Type;

public class TypeManager {

	private Connection connection;

	private String url = "jdbc:hsqldb:hsql://localhost/workdb";

	private String createTableType = "CREATE TABLE Type(id bigint GENERATED BY DEFAULT AS IDENTITY, name varchar(25) unique, purpose varchar(25))";

	private PreparedStatement getOneTypeByNameStmt;
	private PreparedStatement getAllTypeStmt;
	private PreparedStatement deleteOneTypeByNameStmt;
	private PreparedStatement deleteAllTypeStmt;
	private PreparedStatement updateTypeStmt;
	private PreparedStatement addTypeStmt;

	private Statement statement;

	public TypeManager() {
		try {
			connection = DriverManager.getConnection(url);
			statement = connection.createStatement();

			ResultSet rs = connection.getMetaData().getTables(null, null, null, null);
			boolean tableExists = false;
			while (rs.next()) {
				if ("Type".equalsIgnoreCase(rs.getString("TABLE_NAME"))) {
					tableExists = true;
					break;
				}
			}

			if (!tableExists)
				statement.executeUpdate(createTableType);

			getAllTypeStmt = connection.prepareStatement("SELECT * FROM Type");
			getOneTypeByNameStmt = connection.prepareStatement("SELECT * FROM Type WHERE name=?");
			deleteAllTypeStmt = connection.prepareStatement("DELETE FROM Type");
			deleteOneTypeByNameStmt = connection.prepareStatement("DELETE FROM Type WHERE name=?");
			updateTypeStmt = connection.prepareStatement("UPDATE Type SET name=?, purpose=? WHERE name=?");
			addTypeStmt = connection.prepareStatement("INSERT INTO Type (name, purpose) VALUES (?, ?)");

		} catch (SQLException e) {
			e.printStackTrace();
		}
	}

	public Connection getConnection() {
		return connection;
	}

	void clearType() {
		try {
			deleteAllTypeStmt.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}

	void clearTypeByName(String name) {
		try {
			deleteOneTypeByNameStmt.setString(1, name);
			deleteOneTypeByNameStmt.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}

	public boolean addType(Type type) {
		int count = 0;
		try {
			addTypeStmt.setString(1, type.getName());
			addTypeStmt.setString(2, type.getPurpose());

			count = addTypeStmt.executeUpdate();

		} catch (SQLException e) {
			e.printStackTrace();
		}
		return count == 1 ? true : false;
	}

	public List<Type> getAllTypes() {
		List<Type> types = new ArrayList<Type>();

		try {
			ResultSet rs = getAllTypeStmt.executeQuery();

			while (rs.next()) {
				Type t = new Type();
				t.setId(rs.getLong("id"));
				t.setName(rs.getString("name"));
				t.setPurpose(rs.getString("purpose"));
				types.add(t);
			}

		} catch (SQLException e) {
			e.printStackTrace();
		}
		return types;
	}

	public Type getOneType(String name) {
		Type type = new Type();
		try {
			getOneTypeByNameStmt.setString(1, name);
			ResultSet rs = getOneTypeByNameStmt.executeQuery();
			while (rs.next()) {
				type.setId(rs.getLong("id"));
				type.setName(rs.getString("name"));
				type.setPurpose(rs.getString("purpose"));
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return type;
	}

	public boolean updateType(String name, Type newType) {
		int count = 0;
		try {
			updateTypeStmt.setString(1, newType.getName());
			updateTypeStmt.setString(2, newType.getPurpose());
			updateTypeStmt.setString(3, name);
			count = updateTypeStmt.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return count == 1 ? true : false;
	}

}
